services:
  frontend:
    build:
      context: frontend
      target: prod
    env_file:
      - frontend/.env
    depends_on:
      - backend
    networks:
      - nginx_network
    expose:
      - 3000
    restart: always

  backend:
    build:
      context: backend
      target: prod
    env_file:
      - backend/.env
    depends_on:
      - postgres
      - redis
    networks:
      - db_network
      - nginx_network
    expose:
      - 5000
    restart: always

  nginx:
    image: nginx:stable-alpine
    env_file:
      - nginx/.env
    volumes:
      - ./nginx/caviardeul.conf.template:/etc/nginx/templates/caviardeul.conf.template:ro
    ports:
      - "127.0.0.1:3000:3000"
    networks:
      - nginx_network
    depends_on:
      - backend
      - frontend
    restart: always

  postgres:
    image: postgres:16-alpine
    env_file:
      - postgres/.env
    networks:
      - db_network
    expose:
      - 5432
    volumes:
      - "dbdata:/var/lib/postgresql/data"
    restart: always

  redis:
    image: redis:7-alpine
    env_file:
      - redis/.env
    networks:
      - db_network
    expose:
      - 6379
    command: /bin/sh -c "redis-server --requirepass $$REDIS_PASSWORD"
    restart: always

networks:
  db_network:
  nginx_network:

volumes:
  dbdata:
