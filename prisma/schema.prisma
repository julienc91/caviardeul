generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "cockroachdb"
  url = env("DATABASE_URL")
}

model DailyArticle {
  id Int @id @default(sequence())
  pageId String @unique
  pageName String @default("")
  date DateTime @unique
  nbDailyWinners Int @default(0)
  nbWinners Int @default(0)
  stats Json?

  dailyArticleScores DailyArticleScore[]
}

enum ArticleSafety {
    SAFE
    UNSAFE
    UNKNOWN
}

model CustomArticle {
  id String @id @default(cuid())
  createdBy User @relation(fields: [createdById], references: [id], onDelete: Cascade)
  createdById String @db.Uuid
  pageId String
  pageName String @default("")
  safety ArticleSafety @default(UNKNOWN)
  createdAt DateTime @default(now())
  nbWinners Int @default(0)
  stats Json?

  @@unique([createdById, pageId])
}

model User {
  id String @id @default(uuid()) @db.Uuid
  createdAt DateTime @default(now())
  lastSeenAt DateTime @default(now())

  dailyArticleScores DailyArticleScore[]
  customArticles CustomArticle[]
}

model DailyArticleScore {
  dailyArticle DailyArticle @relation(fields: [dailyArticleId], references: [id], onDelete: Cascade)
  dailyArticleId Int
  user User @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId String @db.Uuid
  createdAt DateTime @default(now())
  nbAttempts Int @default(0)
  nbCorrect Int @default(0)

  @@unique([dailyArticleId, userId])
}
